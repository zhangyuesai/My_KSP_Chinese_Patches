Localization
{
    zh-cn
    {
        #SpaceAge_Invalid = N/A // N/A
		#SpaceAge_Kerbal = 一名坎巴拉人 // a kerbal

        // Date/time representation
        #SpaceAge_DateTime_Sec = <<1>>年 <<2>>日 <<3>>:<<4>>:<<5>> // Y<<1>> D<<2>> <<3>>:<<4>>:<<5>>
        #SpaceAge_DateTime_NoSec = <<1>>年 <<2>>日 <<3>>:<<4>> // Y<<1>> D<<2>> <<3>>:<<4>>
        #SpaceAge_Date = <<1>>年 <<2>>日 // Y<<1>> D<<2>>
        #SpaceAge_Years = <<1>> 年 // <<1>> <<1[year/years]>>
        #SpaceAge_Days = <<1>> 天 // <<1>> <<1[day/days]>>

        // UI messages
        #SpaceAge_UI_SettingsReset = Space Age 设置已重置为默认值。 // Space Age settings have been reset to their default values.
        #SpaceAge_UI_EventDetected = 检测到 <<1>> 事件。 // <<1>> event detected.
        #SpaceAge_UI_AchievementsImportTitle = 导入成就 // Achievements Import
        #SpaceAge_UI_AchievementsImportMessage = 已从原版游戏的进度追踪系统中导入 <<1>> 条旧有成就。 // <<1>> old <<1[achievement/achievements]>> imported from stock ProgressTracking system.        
        #SpaceAge_UI_AchievementScore = <<1>> (<<2>> 分) // <<1>> (<<2>> score)
        #SpaceAge_UI_Exported = 编年史已导出至 <<1>> // The Chronicle has been exported to GameData\SpaceAge\PluginData\SpaceAge\<<1>>. 注：这里的文件路径重复了, 已改正

        // SpaceAge window elements
        #SpaceAge_UI_UT = 通时 // UT 注：Universal Time 通用时间
        #SpaceAge_UI_MET = 任时 // MET 注：Mission Elapsed Time 任务经过时间
        #SpaceAge_UI_LogTitle = <<1>> 航行日志 // Ship log for <<1>>
        #SpaceAge_UI_ShipInfo = 发射于 <<1>> // Launched on <<1>>
        #SpaceAge_UI_Back = 返回 // Back
        #SpaceAge_UI_LogBtn = 日志 // Log
        #SpaceAge_UI_ActiveVesselLog = 当前载具的日志 // Active Vessel's Log
        #SpaceAge_UI_ClearBtn = 清除 // Clear
        #SpaceAge_UI_Find = 搜索 // Find
        #SpaceAge_UI_Add = 添加 // Add
        #SpaceAge_UI_Export = 导出 // Export
        #SpaceAge_UI_Body = 天体 // Body
        #SpaceAge_UI_ScoreManned = [载人] <<1>> // [M] <<1>>
        #SpaceAge_UI_ScoreUnmanned = [无人] <<1>> // [U] <<1>>
        #SpaceAge_UI_ScoreNone = — // —
        #SpaceAge_UI_TotalScore = 总得分: <<1>> 点 // Total score: <<1>> <<1[point/points]>>
        #SpaceAge_UI_Chronicle = 编年史 // Chronicle
        #SpaceAge_UI_Achievements = 成就 // Achievements
        #SpaceAge_UI_Score = 得分 // Score

        // Progress score report
        #SpaceAge_PS_Title = 成就 // Achievement
        #SpaceAge_PS_PointsAdded = 获得了 <<1>> 点进度得分。 // <<1>> progress score <<1[point/points]>> added.        
        #SpaceAge_PS_Funds = 获得了 <<1>> 资金。 // <<1>> funds earned.
        #SpaceAge_PS_Science = 获得了 <<1>> 科技点。 // <<1>> science added.
        #SpaceAge_PS_Reputation = 获得了 <<1>> 声望。 // <<1>> reputation added.
        #SpaceAge_PS_AchievementCompleted = 达成成就: <<1>>! // <<1>> achievement completed!

        // Log vessel select dialog
        #SpaceAge_UI_Cancel = 取消 // Cancel
        #SpaceAge_UI_SelectVessel = 选择载具 // Select Vessel

        // Chronicle event descriptions
        #SpaceAge_CE_Launch_Crew = <<C:1>> 发射, 乘员数: <<2>>。 // <<C:1>> was launched with a crew of <<2>>.
        #SpaceAge_CE_Launch_NoCrew = <<C:1>> 发射。 // <<C:1>> was launched.
        #SpaceAge_CE_Takeoff_Crew = <<C:1>> 从 <<2>> 起飞, 乘员数: <<3>>。 // <<C:1>> took off from <<2>> with a crew of <<3>>.
        #SpaceAge_CE_Takeoff_NoCrew = <<C:1>> 从 <<2>> 起飞。 // <<C:1>> took off from <<2>>.
        #SpaceAge_CE_ReachSpace = <<C:1>> 进入太空。 // <<C:1>> reached space.
        #SpaceAge_CE_Staging = <<C:1>> 激活分级 <<2>>。 // <<C:1>> activated stage <<2>>.
        #SpaceAge_CE_Burn = <<C:1>> 完成一次点火, 用时 <<2>>, 提供Δv = <<3>> m/s。 // <<C:1>> completed a burn in <<2>> with Δv = <<3>> m/s.
        #SpaceAge_CE_Orbit = <<C:1>> 进入 <<2>> 的环绕轨道。 // <<C:1>> entered orbit around <<2>>.
        #SpaceAge_CE_SOIChange = <<C:1>> 进入 <<2>> 的引力作用范围。 // <<C:1>> reached <<2>>'s sphere of influence.
        #SpaceAge_CE_Reentry = <<C:1>> 进入 <<2>> 的大气层。 // <<C:1>> entered atmosphere of <<2>>.
        #SpaceAge_CE_Docking = <<C:1>> 与 <<2>> 完成对接。 // <<C:1>> docked with <<2>>.
        #SpaceAge_CE_Undocking = <<C:1>> 从 <<2>> 对接分离。 // <<C:1>> undocked from <<2>>.
        #SpaceAge_CE_Landing_Crew = <<C:1>> 着陆于 <<2>>, 乘员数: <<3>>。 // <<C:1>> landed on <<2>> with a crew of <<3>>.
        #SpaceAge_CE_Landing_NoCrew = <<C:1>> 着陆于 <<2>>。 // <<C:1>> landed on <<2>>.
        #SpaceAge_CE_Recovery_Crew = <<C:1>> 被回收, 乘员数: <<2>>。 // <<C:1>> was recovered with a crew of <<2>>.
        #SpaceAge_CE_Recovery_NoCrew = <<C:1>> 被回收。 // <<C:1>> was recovered.
        #SpaceAge_CE_ReturnFromOrbit = <<C:1>> 从 <<2>> 轨道返回。 // <<C:1>> returned from a <<2>>'s orbit.
        #SpaceAge_CE_ReturnFromSurface = <<C:1>> 从 <<2>> 表面返回。 // <<C:1>> returned from <<2>>'s surface.
        #SpaceAge_CE_Destroy_Body = <<C:1>> 损毁于 <<2>>。 // <<C:1>> was destroyed at <<2>>.
        #SpaceAge_CE_Destroy_NoBody = <<C:1>> 损毁。 // <<C:1>> was destroyed.
        #SpaceAge_CE_Death = <<C:1>> 死亡。 // <<C:1>> died.
        #SpaceAge_CE_FlagPlant = <<C:1>> 在 <<2>> 插旗。 // <<C:1>> planted a flag on <<2>>.
        #SpaceAge_CE_FacilityUpgraded = <<C:1>> 升级至级别 <<2>>。 // <<C:1>> was upgraded to level <<2>>.
        #SpaceAge_CE_StructureCollapsed = <<C:1>> 倒塌。 // <<C:1>> collapsed. 
        #SpaceAge_CE_TechnologyResearched = <<C:1>> 已研究。 // <<C:1>> was researched.
        #SpaceAge_CE_AnomalyDiscovery = 已发现 <<2>> 上的异常点 <<C:1>>。 // <<C:1>> anomaly was discovered on <<2>>.
        #SpaceAge_CE_Achievement_Value = 达成成就: <<C:1>> (<<2>>)! // <<C:1>> (<<2>>) achievement completed!        
        #SpaceAge_CE_Achievement_NoValue = 达成成就: <<C:1>>! // <<C:1>> achievement completed!
        #SpaceAge_CE_Achievement_Vessel_Value = <<C:1>> 达成成就: <<2>> (<<3>>)! // <<C:1>> completed <<2>> (<<3>>) achievement!
        #SpaceAge_CE_Achievement_Vessel_NoValue = <<C:1>> 达成成就: <<2>>! // <<C:1>> completed <<2>> achievement!
        #SpaceAge_CE_Unknown = 未定义事件 (<<1>>)。 // Undefined event (<<1>>).

        // Achievements
        #SpaceAge_A_TotalIncome = 总收入 // Total Income
        #SpaceAge_A_TotalScience = 科技点收集总数 // Total Science Collected
        #SpaceAge_A_TotalLaunches = 发射总次数 // Total Launches
        #SpaceAge_A_TotalMassLaunched = 发射总质量 // Total Mass Launched
        #SpaceAge_A_TotalCrewedLaunches = 载人发射总次数 // Total Crewed Launches
        #SpaceAge_A_TotalCrewLaunched = 发射人员总数 // Kerbals Launched
        #SpaceAge_A_UniqueVesselsInSpace = 进入太空载具数 // Vessels in Space
        #SpaceAge_A_TotalVesselsLost = 损失载具数 // Vessels Lost
        #SpaceAge_A_TotalFlags = 插旗次数 // Flags Planted
        #SpaceAge_A_TotalAnomalies = 发现的异常点个数 // Anomalies Discovered
        #SpaceAge_A_TotalKerbalsLost = 损失人员数 // Kerbals Lost
        #SpaceAge_A_TotalStructuresDestroyed = KSC设施损毁数 // KSC Structures Destroyed
        #SpaceAge_A_HeaviestVessel = 发射的最重载具 // Heaviest Vessel Launched
        #SpaceAge_A_MostExpensiveVessel = 发射的最昂贵载具 // Most Expensive Vessel Launched
        #SpaceAge_A_MostComplexVessel = 发射的最复杂载具 // Most Complex Vessel Launched
        #SpaceAge_A_MaxCrewInVessel = 单一载具中最多乘员 // Max Crew in a Vessel
        #SpaceAge_A_MaxSimultaneousCrew = 同一时间最多执行任务人员 // Max Kerbals on Missions
        #SpaceAge_A_FirstLaunch = 第一次发射 // First Launch
        #SpaceAge_A_FirstCrewedLaunch = 第一次载人发射 // First Crewed Launch
        #SpaceAge_A_FirstInSpace = 第一次进入太空 // First Reaching Space
        #SpaceAge_A_FirstCrewInSpace = 第一次载人进入太空 // First Reaching Space with Crew
        #SpaceAge_A_FirstRecovery = 第一次回收 // First Recovery
        #SpaceAge_A_FirstDestroy = 第一次载具损失 // First Vessel Loss
        #SpaceAge_A_FirstDeath = 第一次人员损失 // First Kerbal Loss
        #SpaceAge_A_UniqueVisits = 造访 <<1>> 次数 // Total Visits to <<1>>
        #SpaceAge_A_UniqueCrewedVisits = 载人造访 <<1>> 次数 // Total Crewed Visits to <<1>>
        #SpaceAge_A_UniqueOrbits = 环绕 <<1>> 的载具总数 // Total Vessels to Orbit <<1>>
        #SpaceAge_A_UniqueCrewedOrbits = 载人环绕 <<1>> 的载具总数 // Total Crewed Vessels to Orbit <<1>>
        #SpaceAge_A_TotalVesselsLostOnBody = 损失于 <<1>> 的载具总数 // Total Vessels Lost at <<1>>
        #SpaceAge_A_TotalLandings = 着陆 <<1>> 次数 // Total Landings on <<1>>
        #SpaceAge_A_TotalCrewedLandings = 载人着陆 <<1>> 次数 // Total Crewed Landings on <<1>>
        #SpaceAge_A_TotalAnomaliesOnBody = 在 <<1>> 发现的异常点个数 // Total Anomalies Discovered on <<1>>
        #SpaceAge_A_HeaviestVesselInOrbit = 环绕 <<1>> 的最重载具 // Heaviest Vessel to Orbit <<1>>
        #SpaceAge_A_HeaviestVesselLanded = 着陆 <<1>> 的最重载具 // Heaviest Vessel Landed on <<1>>
        #SpaceAge_A_FirstFlyby = 第一次飞跃 <<1>> // First Flyby of <<1>>
        #SpaceAge_A_FirstCrewedFlyby = 第一次载人飞越 <<1>> // First Crewed Flyby of <<1>>
        #SpaceAge_A_FirstOrbit = 第一次环绕 <<1>> // First Orbit of <<1>>
        #SpaceAge_A_FirstCrewedOrbit = 第一次载人环绕 <<1>> // First Crewed Orbit of <<1>>
        #SpaceAge_A_FirstDocking = 第一次在 <<1>> 附近对接 // First Docking near <<1>>
        #SpaceAge_A_FirstReturnFromOrbit = 第一次从 <<1>> 轨道返回 // First Return from Orbit of <<1>>
        #SpaceAge_A_FirstCrewedReturnFromOrbit = 第一次从 <<1>> 轨道载人返回 // First Crewed Return from Orbit of <<1>>
        #SpaceAge_A_FirstReentry = 第一次进入 <<1>> 大气层 // First Atmospheric Entry of <<1>>
        #SpaceAge_A_FirstLanding = 第一次着陆 <<1>> // First Landing on <<1>>
        #SpaceAge_A_FirstCrewedLanding = 第一次载人着陆 <<1>> // First Crewed Landing on <<1>>
        #SpaceAge_A_FirstReturnFromSurface = 第一次从 <<1>> 表面返回 // First Return from Surface of <<1>>
        #SpaceAge_A_FirstCrewedReturnFromSurface = 第一次从 <<1>> 表面载人返回 // First Return from Surface of <<1>> 注：这里漏掉了crewed, 已补上
        #SpaceAge_A_FirstFlag = 第一次在 <<1>> 插旗 // First Flag Planted on <<1>>

        // Score categories
        #SpaceAge_Score_FlybySuborbital = 飞越 / 亚轨道 // Flyby / Suborbital
        #SpaceAge_Score_Orbit = 环绕 // Orbit
        #SpaceAge_Score_Docking = 对接 // Docking
        #SpaceAge_Score_ReturnFromOrbit = 从轨道返回 // Return from Orbit
        #SpaceAge_Score_Landing = 着陆 // Landing
        #SpaceAge_Score_ReturnFromSurface = 从表面返回 // Return from Surface

        // Units representation
        #SpaceAge_Unit_Funds = £<<1>> // £<<1>>
        #SpaceAge_Unit_Science = <<1>> 点 // <<1>> <<1[point/points]>>
        #SpaceAge_Unit_Mass = <<1>> t // <<1>> t
        #SpaceAge_Unit_Parts = <<1>> 个部件 // <<1>> <<1[part/parts]>>

        // Settings
        #SpaceAge_Settings_Title = 设置 // Settings
        #SpaceAge_Settings_ShowAppLauncherButton = 显示侧边栏按钮 // Show AppLauncher Button
        #SpaceAge_Settings_ShowAppLauncherButton_desc = 在原版侧边栏中显示按钮 // Show button in the stock AppLauncher bar
        #SpaceAge_Settings_ShowNotifications = 显示通知 // Show Notifications
        #SpaceAge_Settings_ShowNotifications_desc = 当编年史添加了新条目时, 停止时间加速并在屏幕上显示通知 // Stop time warp and show on-screen notifications when new items are added to the Chronicle
        #SpaceAge_Settings_ChronicleLinesPerPage = 每页编年史记录数 // Chronicle Records per Page
        #SpaceAge_Settings_ChronicleLinesPerPage_desc = 一页显示多少条编年史条目 // How many Chronicle entries to show in one page
        #SpaceAge_Settings_NewestFirst = 从新到旧排序 // Newest First
        #SpaceAge_Settings_NewestFirst_desc = 编年史中首先显示最近的事件 // Show recent events first in the Chronicle
        #SpaceAge_Settings_AchievementsPerPage = 每页成就数 // Achievements per Page
        #SpaceAge_Settings_AchievementsPerPage_desc = 一页显示多少条成就条目 // How many Chronicle entries to show in one page
        #SpaceAge_Settings_UseStockDateTimeFormat = 使用原版日期/时间格式 // Use Stock Date/Time Format
        #SpaceAge_Settings_UseStockDateTimeFormat_desc = 以原版游戏的默认格式 ("年3, 日45, 4:32") 显示日期和时间, 而不用Space Age的格式 ("03年 045日 4:32") // Display date & time in the default stock format ("y3, d45, 4:32") instead of SpaceAge's format ("Y03 D045 4:32")
        #SpaceAge_Settings_ImportStockAchievements = 导入原版成就 // Import Stock Achievements
        #SpaceAge_Settings_ImportStockAchievements_desc = 尝试从原版游戏的进度追踪系统中导入可用的成就 (在已有存档中安装并首次运行此模组时, 使用此选项) // Try to import applicable achievements saved by stock ProgressTracking system (use when running the mod for the first time after installing mid-game)
        #SpaceAge_Settings_TrackAchievements = 在编年史中显示成就 // Display Achievements in the Chronicle
        #SpaceAge_Settings_TrackAchievements_desc = 在编年史中追踪并记录Space Age成就 // Track and save Space Age achievements in the Chronicle
        #SpaceAge_Settings_TrackLaunch = 追踪发射事件 // Track Launch Events
        #SpaceAge_Settings_TrackLaunch_desc = 追踪发射事件, 并记录至编年史 // Track and save launches in the Chronicle
        #SpaceAge_Settings_TrackReachSpace = 追踪进入太空事件 // Track Reach Space Events
        #SpaceAge_Settings_TrackReachSpace_desc = 追踪进入太空事件, 并记录至编年史 // Track and save reach space events in the Chronicle
        #SpaceAge_Settings_TrackBurns = 追踪点火事件 (航行日志) // Track Burns (Ship Log)
        #SpaceAge_Settings_TrackBurns_desc = 追踪点火事件 (机动), 并记录至航行日志 // Track and save burns (maneuvers) in the Ship Log. May slightly affect performance
        #SpaceAge_Settings_MinBurnDuration = 最小点火时长 (秒) // Min Burn Duration, s
        #SpaceAge_Settings_MinBurnDuration_desc = 若点火时长小于这一数值, 则不会被记录 // Burns shorter than this won't be logged
        #SpaceAge_Settings_TrackOrbit = 追踪环绕事件 // Track Orbit Events
        #SpaceAge_Settings_TrackOrbit_desc = 追踪进入环绕轨道事件, 并记录至编年史 // Track and save enter orbit events in the Chronicle
        #SpaceAge_Settings_TrackReentry = 追踪再入事件 // Track Reentry Events
        #SpaceAge_Settings_TrackReentry_desc = 追踪进入/再入大气层事件, 并记录至编年史 // Track and save atrmospheric (re)entry events in the Chronicle
        #SpaceAge_Settings_TrackDocking = 追踪对接事件 // Track Docking Events
        #SpaceAge_Settings_TrackDocking_desc = 追踪对接与分离事件, 并记录至编年史 // Track and save docking and undocking events in the Chronicle
        #SpaceAge_Settings_TrackSOIChange = 追踪变更引力作用范围事件 // Track SOI Change Events
        #SpaceAge_Settings_TrackSOIChange_desc = 追踪变更引力作用范围事件, 并记录至编年史 // Track and save SOI changes in the Chronicle
        #SpaceAge_Settings_TrackLanding = 追踪着陆事件 // Track Landing Events
        #SpaceAge_Settings_TrackLanding_desc = 追踪着陆事件, 并记录至编年史 // Track and save landings in the Chronicle
        #SpaceAge_Settings_TrackTakeoffs = 追踪起飞事件 (航行日志) // Track Takeoffs (Ship Log)
        #SpaceAge_Settings_TrackTakeoffs_desc = 追踪并非发射的起飞事件 (例如从其他天体起飞), 并记录至航行日志 // Save in the Ship Log takeoffs that are not launches (e.g. from other celestial bodies)
        #SpaceAge_Settings_MinHopDuration = 最小跳跃时长 (秒) // Min Hop Duration to Track, s
        #SpaceAge_Settings_MinHopDuration_desc = 若起飞到着陆的时间间隔小于这一数值, 则不会被记录 // Landings after hops shorter than this will be ignored
        #SpaceAge_Settings_TrackRecovery = 追踪回收事件 // Track Recovery Events
        #SpaceAge_Settings_TrackRecovery_desc = 追踪载具回收事件, 并记录至编年史 // Track and save vessel recovery events in the Chronicle
        #SpaceAge_Settings_TrackReturnFrom = 追踪 "从...返回" 事件 // Track "Return From" Events
        #SpaceAge_Settings_TrackReturnFrom_desc = 追踪从天体轨道/表面返回事件, 并记录至编年史 // Track and save returns from orbit/surface in the Chronicle
        #SpaceAge_Settings_TrackDestroy = 追踪损毁事件 // Track Destroy Events
        #SpaceAge_Settings_TrackDestroy_desc = 追踪损毁事件, 并记录至编年史 // Track and save destroy events in the Chronicle
        #SpaceAge_Settings_TrackDeath = 追踪死亡事件 // Track Death Events
        #SpaceAge_Settings_TrackDeath_desc = 追踪死亡事件, 并记录至编年史 // Track and save deaths in the Chronicle
        #SpaceAge_Settings_TrackFlagPlant = 追踪插旗事件 // Track Flag Plant Events
        #SpaceAge_Settings_TrackFlagPlant_desc = 追踪插旗事件, 并记录至编年史 // Track and save flag planings in the Chronicle
        #SpaceAge_Settings_TrackAnomalyDiscovery = 追踪发现异常点事件 // Track Anomaly Discovery Events
        #SpaceAge_Settings_TrackAnomalyDiscovery_desc = 追踪发现异常点事件, 并记录至编年史 // Track and save anomaly discoveries in the Chronicle
        #SpaceAge_Settings_TrackFacilityUpgraded = 追踪设施升级事件 // Track Facility Upgraded Events
        #SpaceAge_Settings_TrackFacilityUpgraded_desc = 追踪设施升级事件, 并记录至编年史 // Track and save facility upgrades in the Chronicle
        #SpaceAge_Settings_TrackStructureCollapsed = 追踪设施倒塌事件 // Track Structure Collapsed Events
        #SpaceAge_Settings_TrackStructureCollapsed_desc = 追踪设施倒塌事件, 并记录至编年史 // Track and save structure collapses in the Chronicle
        #SpaceAge_Settings_TrackTechnologyResearched = 追踪技术研究事件 // Track Tech Researched Events
        #SpaceAge_Settings_TrackTechnologyResearched_desc = 追踪研究出的新技术, 并记录至编年史 // Track and save new researched technologies in the Chronicle
        #SpaceAge_Settings_FundsPerScore = 资金每得分点 // Funds per Score Point
        #SpaceAge_Settings_FundsPerScore_desc = 每获得1个进度得分, 奖励多少资金 // How much funds (money) are paid for every point of game score
        #SpaceAge_Settings_SciencePerScore = 科技点每得分点 // Science per Score Point
        #SpaceAge_Settings_SciencePerScore_desc = 每获得1个进度得分, 奖励多少科技点 // How much science is gained for every point of game score
        #SpaceAge_Settings_RepPerScore = 声望每得分点 // Reputation per Score Point
        #SpaceAge_Settings_RepPerScore_desc = 每获得1个进度得分, 奖励多少声望 // How many reputation points are gained for every point of game score
        #SpaceAge_Settings_DebugMode = 调试模式 // Debug Mode
        #SpaceAge_Settings_DebugMode_desc = 详细日志记录 (提交bug反馈必须开启此项) // Verbose logging, obligatory for bug submissions
        #SpaceAge_Settings_ResetSettings = 重置设置 // Reset Settings
        #SpaceAge_Settings_ResetSettings_desc = 若要将Space Age设置重置为默认值, 请勾选此项并返回游戏 // Check and quit to game if you want Space Age settings to be reverted to their default values        
    }
}
